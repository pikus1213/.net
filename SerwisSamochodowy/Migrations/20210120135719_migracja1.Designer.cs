// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SerwisSamochodowy.Models;

namespace SerwisSamochodowy.Migrations
{
    [DbContext(typeof(SerwisContext))]
    [Migration("20210120135719_migracja1")]
    partial class migracja1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SerwisSamochodowy.Models.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Klients");
                });

            modelBuilder.Entity("SerwisSamochodowy.Models.Mechanik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mechaniks");
                });

            modelBuilder.Entity("SerwisSamochodowy.Models.Samochod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("KlientId")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rejestracja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KlientId");

                    b.ToTable("Samochods");
                });

            modelBuilder.Entity("SerwisSamochodowy.Models.Zlecenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Aktywne")
                        .HasColumnType("bit");

                    b.Property<int>("IdMechanika")
                        .HasColumnType("int");

                    b.Property<int>("IdSamochodu")
                        .HasColumnType("int");

                    b.Property<int?>("MechanikId")
                        .HasColumnType("int");

                    b.Property<string>("OpisUsterki")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SamochodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MechanikId");

                    b.HasIndex("SamochodId");

                    b.ToTable("Zlecenies");
                });

            modelBuilder.Entity("SerwisSamochodowy.Models.Samochod", b =>
                {
                    b.HasOne("SerwisSamochodowy.Models.Klient", "Klient")
                        .WithMany("Samochods")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");
                });

            modelBuilder.Entity("SerwisSamochodowy.Models.Zlecenie", b =>
                {
                    b.HasOne("SerwisSamochodowy.Models.Mechanik", "Mechanik")
                        .WithMany("Zlecenies")
                        .HasForeignKey("MechanikId");

                    b.HasOne("SerwisSamochodowy.Models.Samochod", "Samochod")
                        .WithMany("Zlecenies")
                        .HasForeignKey("SamochodId");

                    b.Navigation("Mechanik");

                    b.Navigation("Samochod");
                });

            modelBuilder.Entity("SerwisSamochodowy.Models.Klient", b =>
                {
                    b.Navigation("Samochods");
                });

            modelBuilder.Entity("SerwisSamochodowy.Models.Mechanik", b =>
                {
                    b.Navigation("Zlecenies");
                });

            modelBuilder.Entity("SerwisSamochodowy.Models.Samochod", b =>
                {
                    b.Navigation("Zlecenies");
                });
#pragma warning restore 612, 618
        }
    }
}
